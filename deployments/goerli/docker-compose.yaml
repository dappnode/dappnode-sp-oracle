# instructions

# 1. create jwtsecret file
# sudo openssl rand -hex 32 > jwtsecret

# 2. run docker-compose
# docker-compose up -d

# 3. other
# chmod 777 teku

version: "3.9"

# just used by the oracle
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 2000m

services:
  # Enable when public image is ready
  #oracle:
    # image required to be built locally
    # use from dockerhub when ready
  #  image: "oracle"
  #  restart: "no"
  #  <<: *logging
  #  depends_on:
  #    - geth
  #    - teku
  #  command:
  #    - --network=${NETWORK}
  #    - --consensus-endpoint=http://teku:5051
  #    - --execution-endpoint=http://geth:8545
  #    - --deployed-slot=${DEPLOYED_SLOT}
  #    - --checkpoint-size=${CHECKPOINT_SIZE}
  #    - --pool-address=${POOL_ADDRESS}

  geth:
    image: "ethereum/client-go:v1.10.26"
    restart: on-failure
    stop_grace_period: 5m
    command:
      - --${NETWORK}
      - --http
      - --http.api=eth,net,engine,admin
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.jwtsecret=/jwtsecret
      - --datadir=/geth
      - --port=30303
    ports:
      - 127.0.0.1:8551:8551
      - 127.0.0.1:8545:8545
      - 30303:30303/tcp
      - 30303:30303/udp
    volumes:
      - ./geth:/geth
      - ./jwtsecret:/jwtsecret

  teku:
    image: consensys/teku:22.12.0
    restart: on-failure
    depends_on:
      - geth
    command:
      - --network=${NETWORK}
      - --data-path=/opt/teku/data
      - --ee-endpoint=http://geth:8551
      - --ee-jwt-secret-file=/jwtsecret
      - --metrics-enabled=true
      - --metrics-host-allowlist="*"
      - --rest-api-enabled=true
      - --rest-api-host-allowlist=*
      - --data-storage-archive-frequency=128
      - --data-storage-mode=archive
      #- --initial-state=https://xxx/eth/v2/debug/beacon/states/finalized
    ports:
      - 127.0.0.1:5051:5051
      - 127.0.0.1:8008:8008
      - 9000:9000
    volumes:
      - ./teku:/opt/teku/data
      - ./jwtsecret:/jwtsecret

  postgres:
    image: postgres:15.1
    restart: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 127.0.0.1:5432:5432
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data

  chaind:
    image: wealdtech/chaind:0.6.17
    restart: on-failure
    # TODO: export prometheus metrics
    #ports:
    #  - 127.0.0.1:xxx:yyy
    # This config just indexes deposits
    command:
      - --blocks.enable=false
      - --finalizer.enable=false
      - --summarizer.enable=false
      - --summarizer.epochs.enable=false
      - --summarizer.blocks.enable=false
      - --summarizer.validators.enable=false
      - --validators.enable=false
      - --validators.balances.enable=false
      - --beacon-committees.enable=false
      - --proposer-duties.enable=false
      - --sync-committees.enable=false
      - --eth1deposits.enable=true
      - --eth1deposits.start-block=${BLOCK_DEPOSIT_CONTRACT}
      - --eth1client.address=https://geth:8545
      - --chaindb.url=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_USER}
      - --eth2client.address=http://teku:5051
      - --log-level=trace